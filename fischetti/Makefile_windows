#
# usare VS2017 ma tramite il link "Prompt dei comandi degli strumenti nativi x64 per VS 2017" che si trova sotto
#             C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Visual Studio 2017\Visual Studio Tools\VC
#

OBJS = main.obj mip_utilities.obj locbra.obj selfsplit.obj chrono.obj ic_separation.obj pooling.obj write_gams.obj
HEADERS = mip_utilities.h
EXE = pool

all: $(EXE)

# ---------------------------------------------------------------------
# Compiler selection and libraries for Cplex
# ---------------------------------------------------------------------

#CC = c:/usr/mingw-w64/bin/gcc  -std=c99
#CFLAGS = -Wall -O5
#CC = "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.16.27023\bin\Hostx64\x64\cl"

CC = cl
FLAGS = /O2

LIBS = "c:/usr/cplex128/cplex.lib"
INC =  /I "c:/usr/cplex128"

RM = del

# ---------------------------------------------------------------------
# Rules
# ---------------------------------------------------------------------

.SUFFIXES:
.SUFFIXES: .obj .c .cpp
.c.obj :
	$(CC) $(CFLAGS) $(INC) -c $< -o $@
.cpp.obj :
	$(CC) $(CFLAGS) $(INC) -c $< -o $@

$(EXE): $(OBJS) $(LIBUTILS)
	$(CC) $(CFLAGS) -o $(EXE) $(OBJS) $(LIBS)

$(OBJS) : $(HEADERS)

$(LIBUTILS): $(OBJS_LIBUTILS)
	$(AR) $(LIBUTILS) $(OBJS_LIBUTILS)

$(LIBUTILS) : $(HEADERS_LIBUTILS)

clean:
	$(RM) $(OBJS)
	$(RM) $(OBJS_LIBUTILS)
	$(RM) $(LIBUTILS)
	$(RM) $(EXE)

again:
	make clean
	make

wow:
	@echo "                                      W O W W W W WWWWWWWWWWWWWWWWWWW"

who:
	@echo "you are user $(USER) with uname `uname` (OS = $(OS)) and you working with compiler setting $(setting)"
